// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Scalingo/sand/client/sand (interfaces: Client)

// Package sandmock is a generated GoMock package.
package sandmock

import (
	context "context"
	reflect "reflect"

	params "github.com/Scalingo/sand/api/params"
	types "github.com/Scalingo/sand/api/types"
	gomock "github.com/golang/mock/gomock"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// EndpointCreate mocks base method
func (m *MockClient) EndpointCreate(arg0 context.Context, arg1 params.EndpointCreate) (types.Endpoint, error) {
	ret := m.ctrl.Call(m, "EndpointCreate", arg0, arg1)
	ret0, _ := ret[0].(types.Endpoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EndpointCreate indicates an expected call of EndpointCreate
func (mr *MockClientMockRecorder) EndpointCreate(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EndpointCreate", reflect.TypeOf((*MockClient)(nil).EndpointCreate), arg0, arg1)
}

// EndpointsList mocks base method
func (m *MockClient) EndpointsList(arg0 context.Context, arg1 params.EndpointsList) ([]types.Endpoint, error) {
	ret := m.ctrl.Call(m, "EndpointsList", arg0, arg1)
	ret0, _ := ret[0].([]types.Endpoint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EndpointsList indicates an expected call of EndpointsList
func (mr *MockClientMockRecorder) EndpointsList(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EndpointsList", reflect.TypeOf((*MockClient)(nil).EndpointsList), arg0, arg1)
}

// NetworkCreate mocks base method
func (m *MockClient) NetworkCreate(arg0 context.Context, arg1 params.NetworkCreate) (types.Network, error) {
	ret := m.ctrl.Call(m, "NetworkCreate", arg0, arg1)
	ret0, _ := ret[0].(types.Network)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NetworkCreate indicates an expected call of NetworkCreate
func (mr *MockClientMockRecorder) NetworkCreate(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkCreate", reflect.TypeOf((*MockClient)(nil).NetworkCreate), arg0, arg1)
}

// NetworkDelete mocks base method
func (m *MockClient) NetworkDelete(arg0 context.Context) error {
	ret := m.ctrl.Call(m, "NetworkDelete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// NetworkDelete indicates an expected call of NetworkDelete
func (mr *MockClientMockRecorder) NetworkDelete(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkDelete", reflect.TypeOf((*MockClient)(nil).NetworkDelete), arg0)
}

// NetworksList mocks base method
func (m *MockClient) NetworksList(arg0 context.Context) ([]types.Network, error) {
	ret := m.ctrl.Call(m, "NetworksList", arg0)
	ret0, _ := ret[0].([]types.Network)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NetworksList indicates an expected call of NetworksList
func (mr *MockClientMockRecorder) NetworksList(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworksList", reflect.TypeOf((*MockClient)(nil).NetworksList), arg0)
}
